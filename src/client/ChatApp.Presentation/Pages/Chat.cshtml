@page
@model ChatApp.Presentation.Pages.ChatModel



<div class="text-center">
    <h1 class="display-4">Chat-App Chat</h1>
    <ul id="messageList">
    </ul>
    <br />
    <input type="hidden" asp-for="currentUser" id="hdncurrentuser" />
    Message: <input id="txtCurrentMessage" type="text" width="400" height="50" /> <input type="button" value="Send" onclick="newMessage();" />
</div>
<script src="~/lib/signalr/signalr.js"></script>
<script>
    var messages = [];

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("http://localhost:5019/chat")
        .configureLogging(signalR.LogLevel.Information)
        .build();


    connection.on("newMessage", (userName, message, dateTime) => {
        if (!message.includes("/stock=")) {
            if (messages.length >= 50) {
                messages.shift();
                var ul = document.getElementById('messageList');
                ul.removeChild(ul.firstElementChild);
            }

            var m = new Date(dateTime);

            var dateString =
                m.getUTCFullYear() + "/" +
                ("0" + (m.getUTCMonth() + 1)).slice(-2) + "/" +
                ("0" + m.getUTCDate()).slice(-2) + " " +
                ("0" + m.getUTCHours()).slice(-2) + ":" +
                ("0" + m.getUTCMinutes()).slice(-2) + ":" +
                ("0" + m.getUTCSeconds()).slice(-2);

            var message = `[${dateString}] ${userName}: ${message}`;

            messages.push(message);

            const li = document.createElement("li");
            li.textContent = message
            document.getElementById("messageList").appendChild(li);
        }


    });

    connection.onclose(async () => {
        await start();
    });

    async function start() {
        try {
            await connection.start();

        } catch (err) {
            console.log(err);
            setTimeout(start, 5000);
        }
    };

    async function newMessage() {
        try {

            var userName = document.getElementById('hdncurrentuser').value;
            var message = document.getElementById('txtCurrentMessage').value;
            var dateTime = new Date();


            await connection.invoke("newMessage", userName, message, dateTime);

            document.getElementById('txtCurrentMessage').value = '';
            document.getElementById('txtCurrentMessage').focus();
        } catch (err) {
            console.log(err);
            setTimeout(start, 5000);
        }
    }

    // Start the connection.
    start();
</script>